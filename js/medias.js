const filmsList = document.querySelector(".films-list"), tvsList = document.querySelector(".tvs-list"), filmsCategories = document.querySelectorAll(".categories__films"), tvsCategories = document.querySelectorAll(".categories__tvs"), preloader = document.querySelector(".loader-wrapper"), preloaderTv = document.querySelector(".loader-wrapper-tvs"), svgPrev = document.querySelector(".prev-svg"), popupMedia = document.querySelector(".media-modal"); var pageCount = document.querySelector(".page-change__count"); let activeCategoryFilms = document.querySelector(".categories__films.active").textContent, activeCategoryTvs = document.querySelector(".categories__tvs.active").textContent; const apiConfig = { baseUrl: "https://api.themoviedb.org/3", backdropUrl: "https://image.tmdb.org/t/p/original/", token: "eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiYWZhYWIyYWQzNDhkNDU2OGI3MzFjYmIwNjlhMzJiYiIsInN1YiI6IjY1ODZiZmY4ZmFkOGU5NWUxZjhkNTQ2ZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.KVzkPDoyZhdHWILtEPfa04zoA6hbU6M9OxE3w_VO5IY" }, options = { method: "GET", headers: { accept: "application/json", Authorization: `Bearer ${apiConfig.token}` } }, pageInfo = { movie: { pageElement: document.getElementById("page-films-count"), currentPage: 1, activeCategory: document.querySelector(".categories__films.active").textContent, listSelector: ".films-list" }, tv: { pageElement: document.getElementById("page-tvs-count"), currentPage: 1, activeCategory: document.querySelector(".categories__tvs.active").textContent, listSelector: ".tvs-list" } }; function toggleLoader(e, t) { e.style.display = t ? "flex" : "none" } function initSlickSlider(e) { $(e).hasClass("slick-initialized") || $(e).slick({ slidesToScroll: 5, speed: 300, slidesToShow: 8, nextArrow: '<button type="button" class="arrow-right"><img src="img/next.svg" alt="next-button"></button>', prevArrow: '<button type="button" class="arrow-left"><img src="img/prev.svg" alt="prev-button"></button>', responsive: [{ breakpoint: 1720, settings: { slidesToShow: 6, slidesToScroll: 3, speed: 300, arrows: !0 } }, { breakpoint: 1440, settings: { arrows: !0, slidesToShow: 5, slidesToScroll: 3 } }, { breakpoint: 1284, settings: { arrows: !0, slidesToShow: 4, slidesToScroll: 2 } }, { breakpoint: 1024, settings: { arrows: !0, slidesToShow: 3, slidesToScroll: 2 } }, { breakpoint: 768, settings: { swipe: !0, slidesToShow: 2, slidesToScroll: 1, arrows: !0 } }, { breakpoint: 620, settings: { swipe: !0, slidesToShow: 2, slidesToScroll: 1, arrows: !0 } }, { breakpoint: 480, settings: { swipe: !0, slidesToShow: 1, slidesToScroll: 1, centerMode: !0, centerPadding: "75px", arrows: !0 } }, { breakpoint: 400, settings: { swipe: !0, slidesToShow: 1, slidesToScroll: 1, centerMode: !0, centerPadding: "45px", arrows: !0 } }, { breakpoint: 340, settings: { swipe: !0, slidesToShow: 1, slidesToScroll: 1, centerMode: !0, centerPadding: "10px" } },] }) } function destroySlickSlider(e) { $(e).hasClass("slick-initialized") && $(e).slick("unslick").empty() } function addMovies(e, t, i) {
    e.results.forEach(e => {
        let a = ""; for (let o = 0; o < 5; o++)o < Math.round(e.vote_average) / 2 ? a += '<svg xmlns="http://www.w3.org/2000/svg" width="16" height="15" viewBox="0 0 16 17" fill="none">                <path d="M9 0.5L12.1158 5.2114L17.5595 6.71885L14.0416 11.1381L14.2901 16.7812L9 14.801L3.70993 16.7812L3.95845 11.1381L0.440492 6.71885L5.88415 5.2114L9 0.5Z" fill="#E60000" />                </svg>' : a += '<svg xmlns="http://www.w3.org/2000/svg" width="16" height="15" viewBox="0 0 16 17" fill="none">                <path d="M9 0.5L12.1158 5.2114L17.5595 6.71885L14.0416 11.1381L14.2901 16.7812L9 14.801L3.70993 16.7812L3.95845 11.1381L0.440492 6.71885L5.88415 5.2114L9 0.5Z" fill="#999999"/>                </svg>'; let r = document.createElement("div"), s = ""; r.classList.add("media__card"), r.dataset.id = e.id, "movie" == i ? r.dataset.type = "movie" : "tv" == i && (r.dataset.type = "tv"), s = "movie" == i ? e.original_title : "tv" == i ? e.original_name : null, null != e.poster_path && (r.innerHTML = `
            <div class="image-container">
                <img class="media__img" src="${apiConfig.backdropUrl + e.poster_path}" loading="lazy" alt="media-poster">
                <div class="media__img-overlay"></div>
            </div>
            <svg class='media__link' xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="none">
                <path fill-rule="evenodd" clip-rule="evenodd" d="M13.75 0.25L19 0.25C19.1989 0.25 19.3897 0.329018 19.5303 0.46967C19.671 0.610322 19.75 0.801088 19.75 1V6.25C19.75 6.66421 19.4142 7 19 7C18.5858 7 18.25 6.66421 18.25 6.25V2.81066L6.03033 15.0303C5.73744 15.3232 5.26256 15.3232 4.96967 15.0303C4.67678 14.7374 4.67678 14.2626 4.96967 13.9697L17.1893 1.75L13.75 1.75C13.3358 1.75 13 1.41421 13 1C13 0.585787 13.3358 0.25 13.75 0.25ZM3.25 4.75C2.42157 4.75 1.75 5.42157 1.75 6.25V16.75C1.75 17.5784 2.42157 18.25 3.25 18.25H13.75C14.5784 18.25 15.25 17.5784 15.25 16.75V8.5C15.25 8.08579 15.5858 7.75 16 7.75C16.4142 7.75 16.75 8.08579 16.75 8.5V16.75C16.75 18.4069 15.4069 19.75 13.75 19.75H3.25C1.59315 19.75 0.25 18.4069 0.25 16.75V6.25C0.25 4.59315 1.59315 3.25 3.25 3.25H11.5C11.9142 3.25 12.25 3.58579 12.25 4C12.25 4.41421 11.9142 4.75 11.5 4.75H3.25Z" fill="white"/>
            </svg>
            <p class='media__rating'>${a}</p>
            <p class="media__name">${s}</p>
            `, t.appendChild(r)), r.addEventListener("click", () => { let e = r.getAttribute("data-id"), t = r.getAttribute("data-type"); window.location.href = "about.html", localStorage.setItem("mediaId", e), localStorage.setItem("mediaType", t) })
    })
} async function fetchMediaByCategory(e, t, i, a) { try { "movie" === i ? toggleLoader(preloader, !0) : "tv" == i && toggleLoader(preloaderTv, !0); let o; switch (e) { case "Popular": o = "popular"; break; case "Top Rated": o = "top_rated"; break; case "Upcoming": o = "upcoming"; break; case "Airing Today": o = "airing_today"; break; default: console.error("Invalid category"); return }destroySlickSlider(t); let r = await fetch(`https://api.themoviedb.org/3/${i}/${o}?language=en-US&page=${a}`, options), s = await r.json(); console.log(s), "movie" === i ? addMovies(s, filmsList, "movie") : addMovies(s, tvsList, "tv"), initSlickSlider(t), "movie" === i ? toggleLoader(preloader, !1) : "tv" == i && toggleLoader(preloaderTv, !1) } catch (l) { console.error("Error fetching media:", l) } } function searchByCategory(e, t, i, a) { t.addEventListener("click", function () { e.forEach(e => { e.classList.remove("active") }), t.classList.add("active"), pageInfo[a].activeCategory = t.textContent, pageInfo[a].currentPage = 1, updatePageState(a); let o = pageInfo[a].activeCategory, r = pageInfo[a].currentPage; fetchMediaByCategory(o, i, a, r) }) } filmsCategories.forEach(e => { searchByCategory(filmsCategories, e, ".films-list", "movie") }), tvsCategories.forEach(e => { searchByCategory(tvsCategories, e, ".tvs-list", "tv") }); const changePage = (e, t) => { updatePage(t, e), fetchMediaByCategory(pageInfo[e].activeCategory, pageInfo[e].listSelector, e, pageInfo[e].currentPage) }, nextPage = e => { changePage(e, 1) }, prevPage = e => { changePage(e, -1) }, updatePage = (e, t) => { let i = pageInfo[t]; i.currentPage += e, i.currentPage = Math.max(i.currentPage, 1), updatePageState(t) }, updatePageState = e => { let t = pageInfo[e]; t.pageElement.textContent = t.currentPage, document.querySelectorAll(".prev-svg").forEach(e => { e.style.stroke = 1 === t.currentPage ? "gray" : "white" }) }; initSlickSlider(filmsList), fetchMediaByCategory("Popular", filmsList, "movie", 1), initSlickSlider(tvsList), fetchMediaByCategory("Airing Today", tvsList, "tv", 1);